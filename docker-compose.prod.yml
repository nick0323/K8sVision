version: '3.8'

services:
  k8svision:
    build: .
    container_name: k8svision
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ./config.yaml:/app/config.yaml:ro
      - ~/.kube:/root/.kube:ro
      - /var/log/k8svision:/app/logs
    environment:
      - K8SVISION_CONFIG=/app/config.yaml
      - K8SVISION_LOG_LEVEL=info
      - K8SVISION_JWT_SECRET=${JWT_SECRET}
      - K8SVISION_AUTH_USERNAME=${AUTH_USERNAME}
      - K8SVISION_AUTH_PASSWORD=${AUTH_PASSWORD}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - k8svision-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.k8svision.rule=Host(`k8svision.example.com`)"
      - "traefik.http.routers.k8svision.tls=true"
      - "traefik.http.routers.k8svision.tls.certresolver=letsencrypt"
      - "traefik.http.services.k8svision.loadbalancer.server.port=8080"

  nginx:
    image: nginx:alpine
    container_name: k8svision-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - /var/log/nginx:/var/log/nginx
    depends_on:
      - k8svision
    networks:
      - k8svision-network
    labels:
      - "traefik.enable=false"

networks:
  k8svision-network:
    driver: bridge

volumes:
  k8svision-logs:
    driver: local
